kraken.engine.sanity.check.EngineSanitySizePayloadTest.shouldFailWithSize3=[
  {
    "Policy:-1:policies": {
      "contextFieldInfo": {
        "contextId": "-1",
        "contextName": "Policy",
        "fieldName": "policies",
        "fieldPath": "policies"
      },
      "ruleResults": [
        {
          "ruleInfo": {
            "ruleName": "SizePayloadEquals",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "EQUALS",
            "success": false,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMin",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MIN",
            "success": true,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMax",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MAX",
            "success": false,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        }
      ]
    }
  }
]


kraken.engine.sanity.check.EngineSanitySizePayloadTest.shouldHandleNullCollection=[
  {
    "Policy:-1:policies": {
      "contextFieldInfo": {
        "contextId": "-1",
        "contextName": "Policy",
        "fieldName": "policies",
        "fieldPath": "policies"
      },
      "ruleResults": [
        {
          "ruleInfo": {
            "ruleName": "SizePayloadEquals",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "EQUALS",
            "success": false,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMin",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MIN",
            "success": false,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMax",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MAX",
            "success": true,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        }
      ]
    }
  }
]


kraken.engine.sanity.check.EngineSanitySizePayloadTest.shouldSucceedWithSize2=[
  {
    "Policy:-1:policies": {
      "contextFieldInfo": {
        "contextId": "-1",
        "contextName": "Policy",
        "fieldName": "policies",
        "fieldPath": "policies"
      },
      "ruleResults": [
        {
          "ruleInfo": {
            "ruleName": "SizePayloadEquals",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "EQUALS",
            "success": true,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMin",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MIN",
            "success": true,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        },
        {
          "ruleInfo": {
            "ruleName": "SizePayloadMax",
            "context": "Policy",
            "targetPath": "policies",
            "payloadType": "SIZE"
          },
          "payloadResult": {
            "size": 2,
            "sizeOrientation": "MAX",
            "success": true,
            "templateVariables": [],
            "validationSeverity": "critical"
          },
          "conditionEvaluationResult": {
            "conditionEvaluation": "APPLICABLE"
          },
          "overrideInfo": {
            "isOverridable": false
          }
        }
      ]
    }
  }
]