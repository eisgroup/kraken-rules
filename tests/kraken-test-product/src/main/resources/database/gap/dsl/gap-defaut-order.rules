Namespace Policy

EntryPoint "RuleOrder" {
    "RULEORDER-COLL",
    "RULEORDER-VEHICLE",
    "RULEORDER-POLICY",
    "RULEORDER-INSURED",
    "RULEORDER-CREDITCARD",
    "RULEORDER-BILLINGADDRESS",
    "RULEORDER-PARTY"
}

Rule "RULEORDER-COLL" On COLLCoverage.code {
    Reset To Vehicle.model
}

Rule "RULEORDER-VEHICLE" On Vehicle.model {
    Reset To Policy.policyNumber
}

Rule "RULEORDER-POLICY" On Policy.policyNumber {
    Reset To ConcatInsuredNameWithCreditCardInfo(Insured, CreditCardInfo)
}

Rule "RULEORDER-CREDITCARD" On CreditCardInfo.cardType {
    Reset To Concat({ConcatPartyRelations(Party), BillingAddress.countryCd})
}

Rule "RULEORDER-BILLINGADDRESS" On AddressInfo.countryCd {
    Reset To "Address"
}

Rule "RULEORDER-INSURED" On Insured.name {
    Reset To ConcatPartyRelations(Party)
}

Rule "RULEORDER-PARTY" On Party.relationToPrimaryInsured {
    Reset To "Party"
}

Function ConcatPartyRelations(Party[] parties) : String {
  Concat(parties.relationToPrimaryInsured)
}

Function ConcatInsuredNameWithCreditCardInfo(Insured insured, CreditCardInfo credit) : String {
  Concat({GetName(insured), credit.cardType})
}

Function GetName(Any object) : String {
  object.name
}

EntryPoint "RuleOrderWithComplexField" {
    "RuleOrderWithComplexField_Policy_policyNumber",
    "RuleOrderWithComplexField_AddressInfo_doNotSolicit",
    "RuleOrderWithComplexField_PartyRole_limit",
    "RuleOrderWithComplexField_AddressInfo_city",
    "RuleOrderWithComplexField_RRCoverage_limitAmount",
    "RuleOrderWithComplexField_AddressInfo_street"
}

Rule "RuleOrderWithComplexField_Policy_policyNumber" On Policy.policyNumber {
    When Insured.addressInfo.doNotSolicit
    Default To "doNotSolicit is true"
}

Rule "RuleOrderWithComplexField_AddressInfo_doNotSolicit" On AddressInfo.doNotSolicit {
    Default To every item in Policy.riskItems satisfies item.rentalCoverage.limitAmount > StringLength(city)
}

Rule "RuleOrderWithComplexField_PartyRole_limit" On PartyRole.limit {
    Default To 100
}

Rule "RuleOrderWithComplexField_AddressInfo_city" On AddressInfo.city {
    Default To "San Diego"
}

Rule "RuleOrderWithComplexField_RRCoverage_limitAmount" On RRCoverage.limitAmount {
    When every role in Policy.parties[*].roles satisfies role.limit > deductibleAmount
    Default To 10
}

Rule "RuleOrderWithComplexField_AddressInfo_street" On RRCoverage.deductibleAmount {
    Default To 10
}

EntryPoint "FunctionCheck-RulesUsingFunctionOrderCheck" {
    "Default Car Coverage Limit Amount To 1000", "Default Total Limit To Car Coverage Limit Amount"
}

Rule "Default Car Coverage Limit Amount To 1000" On CarCoverage.limitAmount {
    Default To 1000
}

Rule "Default Total Limit To Car Coverage Limit Amount" On Policy.totalLimit {
    Default To GetCarCoverage(Policy).limitAmount
}

EntryPoint "RuleOrderWithNoCycleInFunction" {
    "RuleOrderWithNoCycleInFunction_Policy_policyNumber",
    "RuleOrderWithNoCycleInFunction_RRCoverage_limitAmount"
}

Rule "RuleOrderWithNoCycleInFunction_Policy_policyNumber" On Policy.policyNumber {
    When Sum(GenericCoverageLimits(Policy.riskItems.collCoverages)) > 100
    Default To "Large"
}

Rule "RuleOrderWithNoCycleInFunction_RRCoverage_limitAmount" On RRCoverage.limitAmount {
    When Policy.policyNumber = "Large"
    Default To Sum(GenericCoverageLimits(Policy.riskItems.collCoverages))
}

Function GenericCoverageLimits(CarCoverage[] coverages) : Number[] {
  for c in coverages return GenericCoverageLimit(c)
}

Function GenericCoverageLimit(CarCoverage coverage) : Number {
  coverage.limitAmount
}

EntryPoint "RuleOrderWithCycleInFunction" {
    "RuleOrderWithCycleInFunction_Policy_policyNumber",
    "RuleOrderWithCycleInFunction_CarCoverage_limitAmount"
}

Rule "RuleOrderWithCycleInFunction_Policy_policyNumber" On Policy.policyNumber {
    When Sum(GenericCoverageLimits(Policy.riskItems.collCoverages)) > 100
    Default To "Large"
}

Rule "RuleOrderWithCycleInFunction_CarCoverage_limitAmount" On CarCoverage.limitAmount {
    When Policy.policyNumber = "Large"
    Default To Sum(GenericCoverageLimits(Policy.riskItems.collCoverages))
}

EntryPoint "DefaultRuleByPriority" {
    "DefaultPolicyNumber-PriorityMAX-defaultExpressionError",
    "DefaultPolicyNumber-Priority999-conditionExpressionError",
    "DefaultPolicyNumber-Priority10",
    "DefaultPolicyNumber-Priority0",
    "DefaultPolicyNumber-Priority-10",
    "DefaultPolicyNumber-PriorityMIN",
    "DefaultPolicyNumber-PriorityMIN2"
}

Rule "DefaultPolicyNumber-PriorityMAX-defaultExpressionError" On Policy.policyNumber {
    Priority MAX
    Reset To Vehicle[0].model
}

Rule "DefaultPolicyNumber-Priority999-conditionExpressionError" On Policy.policyNumber {
    Priority 999
    When Vehicle[0].model = '999'
    Reset To '999'
}

Rule "DefaultPolicyNumber-Priority10" On Policy.policyNumber {
    Priority 10
    When Policy.accountName = '10'
    Reset To '10'
}

Rule "DefaultPolicyNumber-Priority0" On Policy.policyNumber {
    When Policy.accountName = '0'
    Reset To '0'
}

Rule "DefaultPolicyNumber-Priority-10" On Policy.policyNumber {
    Priority -10
    When Policy.accountName = '-10'
    Reset To '-10'
}

Rule "DefaultPolicyNumber-PriorityMIN" On Policy.policyNumber {
    Priority MIN
    Reset To 'MIN'
}

Rule "DefaultPolicyNumber-PriorityMIN2" On Policy.policyNumber {
    Priority MIN
    When Policy.accountName = 'MIN'
    Reset To 'MIN'
}
