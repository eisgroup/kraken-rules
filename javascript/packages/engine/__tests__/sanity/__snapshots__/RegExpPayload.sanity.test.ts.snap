// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Engine Sanity Assertion Payload Test should execute 'RegExpAutoPolicy' entrypoint and reduce results: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "AddressInfo:17:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:17:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:17:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:17:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:21:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:21:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:21:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:21:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "BillingAddress:14:city": Object {
      "fieldType": "STRING",
      "id": "BillingAddress:14:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "BillingAddress:14:postalCode": Object {
      "fieldType": "STRING",
      "id": "BillingAddress:14:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cardNumber": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:13:cardNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "templateVariables": Array [],
            },
            "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0063",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cardType": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:13:cardType",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardType",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0059",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cvv": Object {
      "fieldType": "INTEGER",
      "id": "CreditCardInfo:13:cvv",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cvv",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
              "templateVariables": Array [],
            },
            "regExp": "^[0-9]{3}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0066",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:12:policyNumber": Object {
      "fieldType": "STRING",
      "id": "Policy:12:policyNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
              "templateVariables": Array [],
            },
            "regExp": "^Q[0-9]{4}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0003",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:12:state": Object {
      "fieldType": "STRING",
      "id": "Policy:12:state",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "state",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0007",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "AddressInfo:17:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "17",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:17:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "17",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "AddressInfo:21:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "21",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:21:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "21",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "BillingAddress:14:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "14",
          "contextName": "BillingAddress",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "BillingAddress:14:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "14",
          "contextName": "BillingAddress",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "CreditCardInfo:13:cardNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cardNumber",
          "fieldPath": "cardNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0062",
              "targetPath": "cardNumber",
            },
          },
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
                "templateVariables": Array [],
              },
              "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0063",
              "targetPath": "cardNumber",
            },
          },
        ],
      },
      "CreditCardInfo:13:cardType": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cardType",
          "fieldPath": "cardType",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0059",
              "targetPath": "cardType",
            },
          },
        ],
      },
      "CreditCardInfo:13:cvv": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cvv",
          "fieldPath": "cvv",
          "fieldType": "INTEGER",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
                "templateVariables": Array [],
              },
              "regExp": "^[0-9]{3}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0066",
              "targetPath": "cvv",
            },
          },
        ],
      },
      "Policy:12:policyNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "12",
          "contextName": "Policy",
          "fieldName": "policyNumber",
          "fieldPath": "policyNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
                "templateVariables": Array [],
              },
              "regExp": "^Q[0-9]{4}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0003",
              "targetPath": "policyNumber",
            },
          },
        ],
      },
      "Policy:12:state": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "12",
          "contextName": "Policy",
          "fieldName": "state",
          "fieldPath": "state",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0007",
              "targetPath": "state",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;

exports[`Engine Sanity Assertion Payload Test should execute 'RegExpAutoPolicy' entrypoint with empty data: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "AddressInfo:7:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:7:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:7:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:7:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:2:cardNumber": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:2:cardNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardNumber",
      "ruleResults": Array [],
    },
    "CreditCardInfo:2:cardType": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:2:cardType",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardType",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0059",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:2:cvv": Object {
      "fieldType": "INTEGER",
      "id": "CreditCardInfo:2:cvv",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cvv",
      "ruleResults": Array [],
    },
    "Policy:0:policyNumber": Object {
      "fieldType": "STRING",
      "id": "Policy:0:policyNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
              "templateVariables": Array [],
            },
            "regExp": "^Q[0-9]{4}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0003",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:0:state": Object {
      "fieldType": "STRING",
      "id": "Policy:0:state",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "state",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0007",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "AddressInfo:7:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "7",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:7:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "7",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "CreditCardInfo:2:cardNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cardNumber",
          "fieldPath": "cardNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0062",
              "targetPath": "cardNumber",
            },
          },
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0063",
              "targetPath": "cardNumber",
            },
          },
        ],
      },
      "CreditCardInfo:2:cardType": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cardType",
          "fieldPath": "cardType",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0059",
              "targetPath": "cardType",
            },
          },
        ],
      },
      "CreditCardInfo:2:cvv": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cvv",
          "fieldPath": "cvv",
          "fieldType": "INTEGER",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0066",
              "targetPath": "cvv",
            },
          },
        ],
      },
      "Policy:0:policyNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "policyNumber",
          "fieldPath": "policyNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
                "templateVariables": Array [],
              },
              "regExp": "^Q[0-9]{4}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0003",
              "targetPath": "policyNumber",
            },
          },
        ],
      },
      "Policy:0:state": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "state",
          "fieldPath": "state",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0007",
              "targetPath": "state",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;

exports[`Engine Sanity Assertion Payload Test should execute 'RegExpAutoPolicy' entrypoint with not valid data: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "AddressInfo:5:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:5:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:5:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:5:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:2:cardNumber": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:2:cardNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "templateVariables": Array [],
            },
            "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0063",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:2:cardType": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:2:cardType",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardType",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0059",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:2:cvv": Object {
      "fieldType": "INTEGER",
      "id": "CreditCardInfo:2:cvv",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cvv",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
              "templateVariables": Array [],
            },
            "regExp": "^[0-9]{3}$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0066",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:0:policyNumber": Object {
      "fieldType": "STRING",
      "id": "Policy:0:policyNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
              "templateVariables": Array [],
            },
            "regExp": "^Q[0-9]{4}$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0003",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:0:state": Object {
      "fieldType": "STRING",
      "id": "Policy:0:state",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "state",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": true,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": false,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0007",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "AddressInfo:5:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "5",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:5:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "5",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "CreditCardInfo:2:cardNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cardNumber",
          "fieldPath": "cardNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0062",
              "targetPath": "cardNumber",
            },
          },
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
                "templateVariables": Array [],
              },
              "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0063",
              "targetPath": "cardNumber",
            },
          },
        ],
      },
      "CreditCardInfo:2:cardType": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cardType",
          "fieldPath": "cardType",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0059",
              "targetPath": "cardType",
            },
          },
        ],
      },
      "CreditCardInfo:2:cvv": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "2",
          "contextName": "CreditCardInfo",
          "fieldName": "cvv",
          "fieldPath": "cvv",
          "fieldType": "INTEGER",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
                "templateVariables": Array [],
              },
              "regExp": "^[0-9]{3}$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0066",
              "targetPath": "cvv",
            },
          },
        ],
      },
      "Policy:0:policyNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "policyNumber",
          "fieldPath": "policyNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
                "templateVariables": Array [],
              },
              "regExp": "^Q[0-9]{4}$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0003",
              "targetPath": "policyNumber",
            },
          },
        ],
      },
      "Policy:0:state": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "state",
          "fieldPath": "state",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": false,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0007",
              "targetPath": "state",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^[A-Za-z]+$",
        "messageCode": "code",
        "ruleName": "R0007",
        "severity": "critical",
        "templateVariables": Array [],
      },
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
        "messageCode": "code",
        "ruleName": "R0063",
        "severity": "critical",
        "templateVariables": Array [],
      },
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^\\\\d{5}$",
        "messageCode": "code",
        "ruleName": "R0157A",
        "severity": "critical",
        "templateVariables": Array [],
      },
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^[0-9]{3}$",
        "messageCode": "code",
        "ruleName": "R0066",
        "severity": "critical",
        "templateVariables": Array [],
      },
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
        "messageCode": "code",
        "ruleName": "R0158",
        "severity": "critical",
        "templateVariables": Array [],
      },
      ResultErrorMessage {
        "info": Object {
          "getContextInstanceId": [Function],
          "getContextName": [Function],
        },
        "message": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
        "messageCode": "code",
        "ruleName": "R0003",
        "severity": "critical",
        "templateVariables": Array [],
      },
    ],
    "info": Array [],
    "warning": Array [],
  },
}
`;

exports[`Engine Sanity Assertion Payload Test should execute 'RegExpAutoPolicy' entrypoint with valid data: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "AddressInfo:17:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:17:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:17:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:17:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:21:city": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:21:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "AddressInfo:21:postalCode": Object {
      "fieldType": "STRING",
      "id": "AddressInfo:21:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "BillingAddress:14:city": Object {
      "fieldType": "STRING",
      "id": "BillingAddress:14:city",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "city",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z ]*$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0158",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "BillingAddress:14:postalCode": Object {
      "fieldType": "STRING",
      "id": "BillingAddress:14:postalCode",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "postalCode",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
              "templateVariables": Array [],
            },
            "regExp": "^\\\\d{5}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0157A",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cardNumber": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:13:cardNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "templateVariables": Array [],
            },
            "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0063",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cardType": Object {
      "fieldType": "STRING",
      "id": "CreditCardInfo:13:cardType",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cardType",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0059",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "CreditCardInfo:13:cvv": Object {
      "fieldType": "INTEGER",
      "id": "CreditCardInfo:13:cvv",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "cvv",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
              "templateVariables": Array [],
            },
            "regExp": "^[0-9]{3}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0066",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:12:policyNumber": Object {
      "fieldType": "STRING",
      "id": "Policy:12:policyNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
              "templateVariables": Array [],
            },
            "regExp": "^Q[0-9]{4}$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0003",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
    "Policy:12:state": Object {
      "fieldType": "STRING",
      "id": "Policy:12:state",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "state",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
              "templateVariables": Array [],
            },
            "regExp": "^[A-Za-z]+$",
            "success": true,
            "type": 32,
            "validationSeverity": "critical",
          },
          "ruleName": "R0007",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "AddressInfo:17:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "17",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:17:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "17",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "AddressInfo:21:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "21",
          "contextName": "AddressInfo",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "AddressInfo:21:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "21",
          "contextName": "AddressInfo",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "BillingAddress:14:city": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "14",
          "contextName": "BillingAddress",
          "fieldName": "city",
          "fieldPath": "city",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z ]*$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z ]*$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0158",
              "targetPath": "city",
            },
          },
        ],
      },
      "BillingAddress:14:postalCode": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "14",
          "contextName": "BillingAddress",
          "fieldName": "postalCode",
          "fieldPath": "postalCode",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^\\\\d{5}$",
                "templateVariables": Array [],
              },
              "regExp": "^\\\\d{5}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "AddressInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0157A",
              "targetPath": "postalCode",
            },
          },
        ],
      },
      "CreditCardInfo:13:cardNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cardNumber",
          "fieldPath": "cardNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "NOT_APPLICABLE",
              "error": undefined,
            },
            "kind": 4,
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0062",
              "targetPath": "cardNumber",
            },
          },
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
                "templateVariables": Array [],
              },
              "regExp": "^(?:5[1-5][0-9]{2}|222[1-9]|22[3-9][0-9]|2[3-6][0-9]{2}|27[01][0-9]|2720)[0-9]{12}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0063",
              "targetPath": "cardNumber",
            },
          },
        ],
      },
      "CreditCardInfo:13:cardType": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cardType",
          "fieldPath": "cardType",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0059",
              "targetPath": "cardType",
            },
          },
        ],
      },
      "CreditCardInfo:13:cvv": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "13",
          "contextName": "CreditCardInfo",
          "fieldName": "cvv",
          "fieldPath": "cvv",
          "fieldType": "INTEGER",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[0-9]{3}$",
                "templateVariables": Array [],
              },
              "regExp": "^[0-9]{3}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "CreditCardInfo",
              "payloadtype": "REGEX",
              "ruleName": "R0066",
              "targetPath": "cvv",
            },
          },
        ],
      },
      "Policy:12:policyNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "12",
          "contextName": "Policy",
          "fieldName": "policyNumber",
          "fieldPath": "policyNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^Q[0-9]{4}$",
                "templateVariables": Array [],
              },
              "regExp": "^Q[0-9]{4}$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0003",
              "targetPath": "policyNumber",
            },
          },
        ],
      },
      "Policy:12:state": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "12",
          "contextName": "Policy",
          "fieldName": "state",
          "fieldPath": "state",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "String doesn't match Regular Expression: ^[A-Za-z]+$",
                "templateVariables": Array [],
              },
              "regExp": "^[A-Za-z]+$",
              "success": true,
              "type": 32,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "REGEX",
              "ruleName": "R0007",
              "targetPath": "state",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;
