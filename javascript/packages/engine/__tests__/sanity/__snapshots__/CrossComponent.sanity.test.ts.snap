// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Cross context references sanity tests should access reference with multiple cardinality: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "Policy:0:policyNumber": Object {
      "fieldType": "STRING",
      "id": "Policy:0:policyNumber",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyNumber",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "Value didn't match assertion",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "Value didn't match assertion",
              "templateVariables": Array [],
            },
            "success": true,
            "type": 1,
            "validationSeverity": "critical",
          },
          "ruleName": "R-CCR-Policy-PartyRole",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "Policy:0:policyNumber": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "policyNumber",
          "fieldPath": "policyNumber",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "Value didn't match assertion",
                "templateVariables": Array [],
              },
              "success": true,
              "type": 1,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "ASSERTION",
              "ruleName": "R-CCR-Policy-PartyRole",
              "targetPath": "policyNumber",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;

exports[`Cross context references sanity tests should check is self reference with inherited context will be skipped: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "Policy:0:policyCurrency": Object {
      "fieldType": "STRING",
      "id": "Policy:0:policyCurrency",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyCurrency",
      "ruleResults": Array [
        Object {
          "errorCode": "code",
          "errorMessage": "Value didn't match assertion",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": Object {
              "errorCode": "code",
              "errorMessage": "Value didn't match assertion",
              "templateVariables": Array [],
            },
            "success": true,
            "type": 1,
            "validationSeverity": "critical",
          },
          "ruleName": "R-CCR-Policy-ExPolicy",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "Policy:0:policyCurrency": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "Policy",
          "fieldName": "policyCurrency",
          "fieldPath": "policyCurrency",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": Object {
                "errorCode": "code",
                "errorMessage": "Value didn't match assertion",
                "templateVariables": Array [],
              },
              "success": true,
              "type": 1,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "ASSERTION",
              "ruleName": "R-CCR-Policy-ExPolicy",
              "targetPath": "policyCurrency",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;

exports[`Cross context references sanity tests should not fail on executing rules on same instance with inheritance rules: Results + reducer results 1`] = `
Object {
  "Field Metadata reduced results": Object {
    "PolicyExtended:0:policyCurrency": Object {
      "fieldType": "STRING",
      "id": "PolicyExtended:0:policyCurrency",
      "info": Object {
        "getContextInstanceId": [Function],
        "getContextName": [Function],
      },
      "isDisabled": undefined,
      "isHidden": undefined,
      "resolvedTargetPath": "policyCurrency",
      "ruleResults": Array [
        Object {
          "errorCode": "rule-assertion-error",
          "errorMessage": "Assertion failed",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": undefined,
            "success": true,
            "type": 1,
            "validationSeverity": "critical",
          },
          "ruleName": "Inheritance-CCR-02",
          "severity": "critical",
          "templateVariables": Array [],
        },
        Object {
          "errorCode": "rule-assertion-error",
          "errorMessage": "Assertion failed",
          "isFailed": false,
          "isOverridable": false,
          "isOverridden": false,
          "payloadResult": Object {
            "message": undefined,
            "success": true,
            "type": 1,
            "validationSeverity": "critical",
          },
          "ruleName": "Inheritance-CCR-01",
          "severity": "critical",
          "templateVariables": Array [],
        },
      ],
    },
  },
  "Raw results": Object {
    "evaluationTimestamp": Any<Date>,
    "results": Object {
      "PolicyExtended:0:policyCurrency": Object {
        "contextFieldInfo": ContextFieldInfo {
          "contextId": "0",
          "contextName": "PolicyExtended",
          "fieldName": "policyCurrency",
          "fieldPath": "policyCurrency",
          "fieldType": "STRING",
        },
        "ruleResults": Array [
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": undefined,
              "success": true,
              "type": 1,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "PolicyExtended",
              "payloadtype": "ASSERTION",
              "ruleName": "Inheritance-CCR-02",
              "targetPath": "policyCurrency",
            },
          },
          Object {
            "conditionEvaluationResult": ConditionEvaluationResult {
              "conditionEvaluation": "APPLICABLE",
              "error": undefined,
            },
            "kind": 2,
            "overrideInfo": Object {
              "overridable": false,
              "overrideApplicable": false,
              "overrideGroup": undefined,
            },
            "payloadResult": Object {
              "message": undefined,
              "success": true,
              "type": 1,
              "validationSeverity": "critical",
            },
            "ruleInfo": RuleInfo {
              "context": "Policy",
              "payloadtype": "ASSERTION",
              "ruleName": "Inheritance-CCR-01",
              "targetPath": "policyCurrency",
            },
          },
        ],
      },
    },
  },
  "Validation results": Object {
    "critical": Array [],
    "info": Array [],
    "warning": Array [],
  },
}
`;
