// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutocompleteNodeVisitor should find node on empty expression 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid expression middle 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid expression start 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid path expression middle of property 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve array type element or inline array keyword for known in operation 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve explicit empty filter 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[keyword] this : Vehicle",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve explicit filter 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[keyword] this : Vehicle",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve filter  1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[keyword] this : Vehicle",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve for iteration 1`] = `
Array [
  "[function] Abs : Abs(Number)",
  "[function] All : All(Boolean[])",
  "[function] Any : Any(Boolean[])",
  "[function] AsDate : AsDate(DateTime)",
  "[function] AsTime : AsTime(Date)",
  "[function] Avg : Avg(Any[])",
  "[function] Ceil : Ceil(Number)",
  "[function] Concat : Concat(Any[])",
  "[function] Count : Count(Any)",
  "[function] Date : Date(Number, Number, Number)",
  "[function] Date : Date(String)",
  "[function] DateTime : DateTime(String)",
  "[function] Difference : Difference(T[], T[])",
  "[function] Distinct : Distinct(T[])",
  "[function] EndsWith : EndsWith(String, String)",
  "[function] Flat : Flat(T[][])",
  "[function] Floor : Floor(Number)",
  "[function] Format : Format(Date, String)",
  "[function] FromMoney : FromMoney(Money)",
  "[function] GetCarCoverage : GetCarCoverage(Policy)",
  "[function] GetDay : GetDay(Any)",
  "[function] GetMonth : GetMonth(Any)",
  "[function] GetType : GetType(Any)",
  "[function] GetYear : GetYear(Any)",
  "[function] Includes : Includes(Any, Any)",
  "[function] Intersection : Intersection(T[], T[])",
  "[function] IsBlank : IsBlank(String)",
  "[function] IsDateBetween : IsDateBetween(Date, Date, Date)",
  "[function] IsEmpty : IsEmpty(Any)",
  "[function] Join : Join(T[], T[])",
  "[function] LowerCase : LowerCase(String)",
  "[function] Max : Max(Any[])",
  "[function] Max : Max(Number, Number)",
  "[function] Min : Min(Any[])",
  "[function] Min : Min(Number, Number)",
  "[function] Now : Now()",
  "[function] NumberOfDaysBetween : NumberOfDaysBetween(Date, Date)",
  "[function] NumberOfMonthsBetween : NumberOfMonthsBetween(Date, Date)",
  "[function] NumberOfYearsBetween : NumberOfYearsBetween(Date, Date)",
  "[function] NumberSequence : NumberSequence(Number, Number, Number)",
  "[function] NumberSequence : NumberSequence(Number, Number)",
  "[function] NumberToString : NumberToString(Number)",
  "[function] PadLeft : PadLeft(String, String, Number)",
  "[function] PadRight : PadRight(String, String, Number)",
  "[function] PlusDays : PlusDays(T, Number)",
  "[function] PlusMonths : PlusMonths(T, Number)",
  "[function] PlusYears : PlusYears(T, Number)",
  "[function] Round : Round(Number, Number)",
  "[function] Round : Round(Number)",
  "[function] RoundEven : RoundEven(Number, Number)",
  "[function] RoundEven : RoundEven(Number)",
  "[function] Sign : Sign(Number)",
  "[function] Sqrt : Sqrt(Number)",
  "[function] StartsWith : StartsWith(String, String)",
  "[function] StringLength : StringLength(String)",
  "[function] Substring : Substring(String, Number, Number)",
  "[function] Substring : Substring(String, Number)",
  "[function] Sum : Sum(Any[])",
  "[function] SymmetricDifference : SymmetricDifference(T[], T[])",
  "[function] Today : Today()",
  "[function] Trim : Trim(String)",
  "[function] Union : Union(T[], T[])",
  "[function] UpperCase : UpperCase(String)",
  "[keyword] every : every iteration start",
  "[keyword] for : for iteration start",
  "[keyword] if : if block",
  "[keyword] some : some iteration start",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress | BillingAddress[]",
  "[reference] CarCoverage : CarCoverage | CarCoverage[]",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info | Info[]",
  "[reference] Insured : Insured",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] r : Vehicle",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo | RefererInfo[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve for iteration with non existing path 1`] = `Array []`;

exports[`AutocompleteNodeVisitor should resolve for iteration with path 1`] = `
Array [
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] costNew : Number",
  "[reference] declaredAnnualMiles : Number",
  "[reference] included : Boolean",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] purchasedDate : Date",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] serviceHistory : Date[]",
  "[reference] vehicleState : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve path and resolve path scope variables with nested property  1`] = `
Array [
  "[reference] name : String",
  "[reference] superReferer : SuperReferer",
]
`;

exports[`AutocompleteNodeVisitor should resolve path and resolve path scope variables with no property  1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;
