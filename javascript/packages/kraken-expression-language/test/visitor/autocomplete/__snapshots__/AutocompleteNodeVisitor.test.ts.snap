// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutocompleteNodeVisitor should find node after binary expression 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on empty expression 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid expression middle 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid expression start 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should find node on valid path expression middle of property 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve array type element or inline array keyword for known in operation 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from 'this' 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from 'this' in filter 1`] = `
Array [
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] costNew : Number",
  "[reference] declaredAnnualMiles : Number",
  "[reference] included : Boolean",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] purchasedDate : Date",
  "[reference] refsToDriver : Unknown[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] serviceHistory : Date[]",
  "[reference] vehicleState : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from 'this' in filter or access by index 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] changePremium : Number",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] included : Boolean",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from empty 'this' in filter or access by index 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] changePremium : Number",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] included : Boolean",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from incomplete 'this' 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from incomplete 'this' from object 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from incomplete path in filter 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve autocomplete from path in filter 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve closest node correctly 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve closest node correctly from nested with space 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] r : Vehicle",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve explicit empty filter 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve explicit filter 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve filter 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve for iteration 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] r : Vehicle",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve for iteration collection 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve for iteration with non existing path 1`] = `Array []`;

exports[`AutocompleteNodeVisitor should resolve for iteration with path 1`] = `
Array [
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] costNew : Number",
  "[reference] declaredAnnualMiles : Number",
  "[reference] included : Boolean",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] purchasedDate : Date",
  "[reference] refsToDriver : Unknown[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] serviceHistory : Date[]",
  "[reference] vehicleState : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from error node parent 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from global when in filter collection 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from incomplete filter or access by index 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from incomplete filter or access by index and path 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from incomplete path in incomplete property 1`] = `
Array [
  "[reference] accountName : String",
  "[reference] changePremium : Number",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] currentQuoteInd : Boolean",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] policies : String[]",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] refToCustomer : Unknown",
  "[reference] riskItems : Vehicle[]",
  "[reference] state : String",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve from incomplete path in object 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve implicit empty filter or access by index 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve implicit filter or access by index 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] anubisCoverages : AnubisCoverage[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] collCoverages : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] costNew : Number",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] declaredAnnualMiles : Number",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] included : Boolean",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] model : String",
  "[reference] modelYear : Number",
  "[reference] newValue : Number",
  "[reference] numberOfInsureds : Number[]",
  "[reference] numDaysDrivenPerWeek : Number",
  "[reference] odometerReading : Number",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] purchasedDate : Date",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refsToDriver : Unknown[]",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] rentalCoverage : RRCoverage",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] serviceHistory : Date[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] vehicleState : String",
  "[reference] versionDescription : String",
]
`;

exports[`AutocompleteNodeVisitor should resolve path and resolve path scope variables with nested property 1`] = `
Array [
  "[reference] name : String",
  "[reference] superReferer : SuperReferer",
]
`;

exports[`AutocompleteNodeVisitor should resolve variables for autocomplete 1`] = `
Array [
  "[function] Abs(Number): Number",
  "[function] All(Boolean[]): Boolean",
  "[function] Any(Boolean[]): Boolean",
  "[function] AsDate(DateTime): Date",
  "[function] AsTime(Date): DateTime",
  "[function] Avg(Number[]): Number",
  "[function] CalculateTotalLimit(Policy): Number",
  "[function] Ceil(Number): Number",
  "[function] Concat(Any[]): String",
  "[function] ConcatInsuredNameWithCreditCardInfo(Insured,CreditCardInfo): String",
  "[function] ConcatPartyRelations(Party[]): String",
  "[function] Count(Any): Number",
  "[function] Date(Number,Number,Number): Date",
  "[function] Date(String): Date",
  "[function] DateTime(String): DateTime",
  "[function] Difference(<T>[],<T>[]): <T>[]",
  "[function] Distinct(<T>[]): <T>[]",
  "[function] EndsWith(String,String): Boolean",
  "[function] Fibonacci(Number): Number",
  "[function] Flat(<T>[][]): <T>[]",
  "[function] Floor(Number): Number",
  "[function] Format(Date,String): String",
  "[function] FromMoney(Money): Number",
  "[function] GenericCoverageLimit(CarCoverage): Number",
  "[function] GenericCoverageLimits(CarCoverage[]): Number[]",
  "[function] GetCarCoverage(Policy): CarCoverage",
  "[function] GetCoverages(Policy): CarCoverage[]",
  "[function] GetDay(Date | DateTime): Number",
  "[function] GetFirstElement(String[]): String",
  "[function] GetMonth(Date | DateTime): Number",
  "[function] GetName(Any): String",
  "[function] GetType(Any): String",
  "[function] GetVehicleModel(Vehicle): String",
  "[function] GetYear(Date | DateTime): Number",
  "[function] Includes(Any,Any): Boolean",
  "[function] Intersection(<T>[],<T>[]): <T>[]",
  "[function] IsBlank(String): Boolean",
  "[function] IsDateBetween(Date,Date,Date): Boolean",
  "[function] IsEmpty(Any): Boolean",
  "[function] Join(<T>[],<T>[]): <T>[]",
  "[function] LowerCase(String): String",
  "[function] Max(<T>,<T>): <T>",
  "[function] Max(<T>[]): <T>",
  "[function] Min(<T>,<T>): <T>",
  "[function] Min(<T>[]): <T>",
  "[function] MinLimit(Policy): Number",
  "[function] MinLimitCoverages(CarCoverage[]): Number",
  "[function] Now(): DateTime",
  "[function] NumberOfDaysBetween(Date,Date): Number",
  "[function] NumberOfMonthsBetween(Date,Date): Number",
  "[function] NumberOfYearsBetween(Date,Date): Number",
  "[function] NumberSequence(Number,Number,Number): Number[]",
  "[function] NumberSequence(Number,Number): Number[]",
  "[function] NumberToString(Number): String",
  "[function] PadLeft(String,String,Number): String",
  "[function] PadRight(String,String,Number): String",
  "[function] PlusDays(<T>,Number): <T>",
  "[function] PlusMonths(<T>,Number): <T>",
  "[function] PlusYears(<T>,Number): <T>",
  "[function] Round(Number,Number): Number",
  "[function] Round(Number): Number",
  "[function] RoundEven(Number,Number): Number",
  "[function] RoundEven(Number): Number",
  "[function] Sign(Number): Number",
  "[function] Sqrt(Number): Number",
  "[function] StartsWith(String,String): Boolean",
  "[function] StringLength(String): Number",
  "[function] Substring(String,Number,Number): String",
  "[function] Substring(String,Number): String",
  "[function] Sum(Number[]): Number",
  "[function] SymmetricDifference(<T>[],<T>[]): <T>[]",
  "[function] Today(): Date",
  "[function] Trim(String): String",
  "[function] Union(<T>[],<T>[]): <T>[]",
  "[function] UpperCase(String): String",
  "[function] WithDay(<T>,Number): <T>",
  "[function] WithMonth(<T>,Number): <T>",
  "[function] WithYear(<T>,Number): <T>",
  "[keyword] and",
  "[keyword] else",
  "[keyword] every",
  "[keyword] false",
  "[keyword] for",
  "[keyword] if",
  "[keyword] in",
  "[keyword] instanceof",
  "[keyword] matches",
  "[keyword] not",
  "[keyword] null",
  "[keyword] or",
  "[keyword] return",
  "[keyword] set",
  "[keyword] some",
  "[keyword] then",
  "[keyword] this",
  "[keyword] to",
  "[keyword] true",
  "[keyword] typeof",
  "[reference] accountName : String",
  "[reference] AddressInfo : AddressInfo | AddressInfo[]",
  "[reference] AddressLine : AddressLine | AddressLine[]",
  "[reference] AddressLine1 : AddressLine1 | AddressLine1[]",
  "[reference] AddressLine2 : AddressLine2 | AddressLine2[]",
  "[reference] BillingAddress : BillingAddress",
  "[reference] CarCoverage : CarCoverage",
  "[reference] changePremium : Number",
  "[reference] COLLCoverage : COLLCoverage[]",
  "[reference] context : Any",
  "[reference] contractTermTypeCd : String",
  "[reference] createdBy : String",
  "[reference] createdFromPolicyRev : Number",
  "[reference] createdOn : Date",
  "[reference] CreditCardInfo : CreditCardInfo",
  "[reference] currentQuoteInd : Boolean",
  "[reference] DriverCoverage : DriverCoverage[]",
  "[reference] DriverInfo : DriverInfo[]",
  "[reference] effectiveDate : Date",
  "[reference] expirationDate : Date",
  "[reference] FullCoverage : FullCoverage[]",
  "[reference] Info : Info",
  "[reference] Insured : Insured",
  "[reference] numberOfInsureds : Number[]",
  "[reference] oosProcessingStage : String",
  "[reference] parties : Party[]",
  "[reference] Party : Party[]",
  "[reference] PartyRole : PartyRole[]",
  "[reference] PersonInfo : PersonInfo[]",
  "[reference] PersonNameInfo : PersonNameInfo[]",
  "[reference] policies : String[]",
  "[reference] Policy : Policy",
  "[reference] policyCurrency : String",
  "[reference] policyNumber : String",
  "[reference] policyValue : Money",
  "[reference] r : Vehicle[]",
  "[reference] referer : Referer",
  "[reference] Referer : Referer",
  "[reference] RefererInfo : RefererInfo",
  "[reference] refToCustomer : Unknown",
  "[reference] RentalCoverage : RentalCoverage[]",
  "[reference] riskItems : Vehicle[]",
  "[reference] RRCoverage : RRCoverage[]",
  "[reference] SecondaryInsured : SecondaryInsured[]",
  "[reference] state : String",
  "[reference] SuperReferer : SuperReferer",
  "[reference] termCd : String",
  "[reference] termNo : Number",
  "[reference] totalLimit : Number",
  "[reference] totalPremium : Number",
  "[reference] TransactionDetails : TransactionDetails",
  "[reference] txCreateDate : Date",
  "[reference] txEffectiveDate : DateTime",
  "[reference] txReason : String",
  "[reference] txType : String",
  "[reference] updatedBy : String",
  "[reference] updatedOn : Date",
  "[reference] Vehicle : Vehicle[]",
  "[reference] versionDescription : String",
]
`;
